name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and Push Docker Image to ECR
        run: |
          # Docker 이미지 빌드 및 AWS ECR 푸시
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest .
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest

      - name: Prepare SSH Key
        run: |
          # SSH 키 준비
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        run: |
          HOST=${{ secrets.EC2_HOST }}
          USER=${{ secrets.EC2_USER }}

          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "
            # 1. Git Repository에서 최신 코드 가져오기
            if [ ! -d /home/${USER}/backend ]; then
              echo 'Cloning repository for the first time...';
              git clone https://github.com/${{ github.repository }} backend;
            else
              echo 'Pulling latest changes from repository...';
              cd backend;
              git pull origin main;
            fi;

            # 2. Docker 이미지 Pull
            echo 'Pulling the latest Docker image from ECR...';
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com;
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest;

            # 3. 기존 컨테이너 중지 및 제거
            echo 'Stopping and removing existing Docker container...';
            docker stop backend || true;
            docker rm backend || true;

            # 4. 새 컨테이너 실행
            echo 'Running the new Docker container...';
            docker run -d -p 3000:3000 --name backend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest;

            # 5. Nginx Reload
            echo 'Reloading Nginx...';
            sudo systemctl reload nginx;
          "
